{"ast":null,"code":"import _slicedToArray from \"P:\\\\hooks-02-hooks-enabled\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"P:\\\\hooks-02-hooks-enabled\\\\src\\\\components\\\\Todo.js\";\n//use means hook functions\nimport React, { useState } from 'react';\n\nvar todo = function todo(props) {\n  //useState passes two values, inputState[0] and inputState[1]\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      todoName = _useState2[0],\n      setTodoName = _useState2[1];\n\n  var inputChangeHandler = function inputChangeHandler(event) {\n    inputState[1](event.target.value);\n  }; //inputState[0] is a reference to latest state\n  //inputState[1] is a function we can execute to update state to update \n\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Todo\",\n    onChange: inputChangeHandler,\n    value: inputState[0],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"Add\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }));\n};\n\nexport default todo;","map":{"version":3,"sources":["P:\\hooks-02-hooks-enabled\\src\\components\\Todo.js"],"names":["React","useState","todo","props","todoName","setTodoName","inputChangeHandler","event","inputState","target","value"],"mappings":";;AAAA;AACA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAAAC,KAAK,EAAG;AACjB;AADiB,kBAGeF,QAAQ,CAAC,EAAD,CAHvB;AAAA;AAAA,MAGVG,QAHU;AAAA,MAGAC,WAHA;;AAKjB,MAAMC,kBAAkB,GAAC,SAAnBA,kBAAmB,CAACC,KAAD,EAAS;AAC9BC,IAAAA,UAAU,CAAC,CAAD,CAAV,CAAcD,KAAK,CAACE,MAAN,CAAaC,KAA3B;AACH,GAFD,CALiB,CAQjB;AACA;;;AACA,SAAQ,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEJ;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,WAAW,EAAC,MAA/B;AAAsC,IAAA,QAAQ,EAAEJ,kBAAhD;AAAoE,IAAA,KAAK,EAAEE,UAAU,CAAC,CAAD,CAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFI,EAGJ;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAHI,EAIJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJI,CAAR;AAQH,CAlBD;;AAoBA,eAAeN,IAAf","sourcesContent":["//use means hook functions\r\nimport React, {useState} from 'react';\r\n\r\nconst todo = props =>{\r\n    //useState passes two values, inputState[0] and inputState[1]\r\n    //[todoName, setTodoName] is array destructuring. Pull out elements of an array to assign them\r\n    const [todoName, setTodoName] = useState('');\r\n\r\n    const inputChangeHandler=(event)=>{\r\n        inputState[1](event.target.value)\r\n    }\r\n    //inputState[0] is a reference to latest state\r\n    //inputState[1] is a function we can execute to update state to update \r\n    return (<React.Fragment>\r\n\r\n        <input type='text' placeholder=\"Todo\" onChange={inputChangeHandler} value={inputState[0]}/>\r\n        <button type='button'>Add</button>\r\n        <ul>\r\n\r\n        </ul>\r\n    </React.Fragment>)\r\n};\r\n\r\nexport default todo;"]},"metadata":{},"sourceType":"module"}